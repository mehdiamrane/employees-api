{
  "openapi": "3.0.0",
  "info": {
    "title": "Employees API",
    "description": "A mock REST API for employee data",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "Local server"
    }
  ],
  "paths": {
    "/employees": {
      "get": {
        "summary": "Get all employees",
        "tags": ["Employees"],
        "responses": {
          "200": {
            "description": "A list of employees",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/employee/{id}": {
      "get": {
        "summary": "Get employee by ID",
        "tags": ["Employees"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the employee",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/create": {
      "post": {
        "summary": "Create a new employee",
        "tags": ["Employees"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/update/{id}": {
      "put": {
        "summary": "Update an employee",
        "tags": ["Employees"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the employee to update",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/delete/{id}": {
      "delete": {
        "summary": "Delete an employee",
        "tags": ["Employees"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the employee to delete",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Get API health status",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Health check successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/trigger-update": {
      "get": {
        "summary": "Trigger database update",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Update triggered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "required": ["id", "employee_name", "employee_salary", "employee_age"],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "employee_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "John Doe"
          },
          "employee_salary": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000000,
            "example": 75000
          },
          "employee_age": {
            "type": "integer",
            "minimum": 18,
            "maximum": 100,
            "example": 30
          },
          "profile_image": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "CreateEmployeeDto": {
        "type": "object",
        "required": ["employee_name", "employee_salary", "employee_age"],
        "properties": {
          "employee_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "John Doe"
          },
          "employee_salary": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000000,
            "example": 75000
          },
          "employee_age": {
            "type": "integer",
            "minimum": 18,
            "maximum": 100,
            "example": 30
          },
          "profile_image": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "UpdateEmployeeDto": {
        "type": "object",
        "properties": {
          "employee_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "example": "John Doe"
          },
          "employee_salary": {
            "type": "number",
            "minimum": 0,
            "maximum": 1000000,
            "example": 75000
          },
          "employee_age": {
            "type": "integer",
            "minimum": 18,
            "maximum": 100,
            "example": 30
          },
          "profile_image": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/avatar.jpg"
          }
        }
      },
      "EmployeeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/Employee"
          },
          "message": {
            "type": "string",
            "example": "Successfully retrieved employee"
          }
        }
      },
      "EmployeesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Employee"
            }
          },
          "message": {
            "type": "string",
            "example": "Successfully retrieved employees"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "data": {
            "type": "null"
          },
          "message": {
            "type": "string",
            "example": "Error message here"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "data": {
            "type": "null"
          },
          "message": {
            "type": "string",
            "example": "Validation failed"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "employee_salary"
                },
                "message": {
                  "type": "string",
                  "example": "Salary must be a positive number"
                }
              }
            }
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "lastCronUpdate": {
                "type": "string",
                "format": "date-time"
              },
              "fileLastModified": {
                "type": "string",
                "format": "date-time"
              },
              "fileSize": {
                "type": "number"
              },
              "uptime": {
                "type": "number"
              }
            }
          }
        }
      },
      "TriggerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Database update triggered successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Employees",
      "description": "Employee management endpoints"
    },
    {
      "name": "System",
      "description": "System management endpoints"
    }
  ]
}
